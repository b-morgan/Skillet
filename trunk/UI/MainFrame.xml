<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\..\FrameXML\UI.xsd">

	<!--
	Skillet: A tradeskill window replacement.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
	-->

	<Button name="SkilletGuildCrafterButtonTemplate" hidden="false" virtual="true">
		<Size>
			<AbsDimension x="152" y="16"/>
		</Size>
		<ButtonText name="$parentText">
			<Size x="0" y="16"/>
			<Anchors>
				<Anchor point="LEFT" x="4" y="0"/>
			</Anchors>
		</ButtonText>
		<Scripts>
			<OnClick>
				ChatFrame_SendTell(self.name);
			</OnClick>
		</Scripts>
		<NormalFont style="GameFontHighlightLeft"/>
		<HighlightFont style="GameFontHighlightLeft"/>
		<DisabledFont style="GameFontDisableLeft"/>
		<HighlightTexture file="Interface\FriendsFrame\UI-FriendsFrame-HighlightBar-Blue" setAllPoints="true" alphaMode="ADD"/>
	</Button>
	<!--
	#
	#   Template for trade buttons in skillet frame for Main
	#
	-->
	<CheckButton name="SkilletTradeButtonTemplate" virtual="true" hidden="true">
		<Size>
			<AbsDimension x="25" y="25"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentIcon"/>
			</Layer>
		</Layers>
		<Scripts>
			<OnEnter>
				Skillet:TradeButton_OnEnter(self);
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
			<OnClick>
				Skillet:InventoryFilterButtons_Hide()
				Skillet:TradeButton_OnClick(self,button)
			</OnClick>
		</Scripts>
		<PushedTexture file="Interface\Buttons\UI-Quickslot-Depress"/>
		<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
		<CheckedTexture alphaMode="ADD" file="Interface\Buttons\CheckButtonHilight"/>
	</CheckButton>
	<Button name="SkilletTradeButtonAdditionalTemplate" inherits="SecureActionButtonTemplate" virtual="true" hidden="true">
		<Size>
			<AbsDimension x="25" y="25"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentIcon"/>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
			</OnLoad>
			<OnEnter>
				Skillet:TradeButtonAdditional_OnEnter(self);
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
		<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
	</Button>
	<StatusBar name="SkilletRankFrameTemplate" drawLayer="BACKGROUND" minValue="0" maxValue="1" defaultValue="0" virtual="true">
		<Size>
			<AbsDimension x="297" y="5"/>
		</Size>
		<Anchors>
			<Anchor point="TOPRIGHT">
				<Offset>
					<AbsDimension x="-12" y="-75"/>
				</Offset>
			</Anchor>
		</Anchors>
		<BarTexture name="$parentBar">
			<Color r="0.7" g="0.7" b="0.7" a="1.0"/>
		</BarTexture>
		<Scripts>
			<OnEnter>
				Skillet:RankFrame_OnEnter(self)
			</OnEnter>
			<OnLeave>
				Skillet:RankFrame_OnLeave(self)
			</OnLeave>
		</Scripts>
	</StatusBar>
	<CheckButton name="SkilletInvFilterButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="20" y="20"/>
		</Size>
		<CheckedTexture name="$parentChecked" alphaMode="ADD" file="Interface\Addons\Skillet\Icons\highlight.tga"/>
		<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
		<Scripts>
			<OnLoad>
				self:SetFrameLevel(self:GetFrameLevel()+5)
			</OnLoad>
			<OnLeave>
				Skillet:InventoryFilterButton_OnLeave(self)
			</OnLeave>
			<OnEnter>
				Skillet:InventoryFilterButton_OnEnter(self)
			</OnEnter>
			<OnClick>
				Skillet:InventoryFilterButton_OnClick(self)
			</OnClick>
			<OnShow>
				Skillet:InventoryFilterButton_OnShow(self)
			</OnShow>
		</Scripts>
	</CheckButton>
	<!--
	#
	#   Template for all the buttons used in the list of known skills
	#
	-->
	<Button name="SkilletHeaderExpandButtonTemplate" hidden="true" virtual="true">
		<Size>
			<AbsDimension x="16" y="16" />
		</Size>
		<NormalTexture name="$parentNormal" file="Interface\Buttons\UI-MinusButton-UP">
			<Size>
				<AbsDimension x="16" y="16" />
			</Size>
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="0" y="0" />
					</Offset>
				</Anchor>
			</Anchors>
		</NormalTexture>
		<HighlightTexture name="$parentHighlight" file="IInterface\Buttons\UI-PlusButton-Hilight" alphaMode="ADD">
			<Size>
				<AbsDimension x="16" y="16" />
			</Size>
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="0" y="0" />
					</Offset>
				</Anchor>
			 </Anchors>
		</HighlightTexture>
		<DisabledTexture name="$parentDisabled" file="Interface\Buttons\UI-PlusButton-Disabled">
			<Size>
				<AbsDimension x="16" y="16" />
			</Size>
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
		  				<AbsDimension x="0" y="0" />
		  			</Offset>
		  		</Anchor>
			</Anchors>
		</DisabledTexture>
		<Scripts>
			<OnClick>
				Skillet:InventoryFilterButtons_Hide()
				Skillet:SkillExpandButton_OnClick(self,button)
			</OnClick>
		</Scripts>
	</Button>
	<Button name="SkilletEmptySpaceTemplate" virtual="true">
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
				self:RegisterForDrag("LeftButton")
				self:EnableKeyboard(false)
			</OnLoad>
			<OnClick>
				Skillet:InventoryFilterButtons_Hide()
				Skillet:SkillButton_OnClick(self,button)
			</OnClick>
			<OnDragStart>
				Skillet.mouseOver = self
				Skillet:SkillButton_OnDragStart(self, button)
			</OnDragStart>
			<OnReceiveDrag>
				Skillet.mouseOver = self
				Skillet:SkillButton_OnReceiveDrag(self, button)
			</OnReceiveDrag>
			<OnDragStop>
				Skillet:SkillButton_OnDragStop(self, button)
			</OnDragStop>
			<OnEnter>
				self:RegisterEvent("MODIFIER_STATE_CHANGED")
				Skillet.mouseOver = self
			</OnEnter>
			<OnHide>
				if self == Skillet.mouseOver then
					SkilletFrame:EnableKeyboard(false)
					Skillet.mouseOver = nil
				end
			</OnHide>
			<OnLeave>
				self:UnregisterEvent("MODIFIER_STATE_CHANGED")
				Skillet.mouseOver = nil
				SkilletSkillTooltip:Hide()
				ShoppingTooltip1:Hide()
				ShoppingTooltip2:Hide()
			</OnLeave>
			<OnEvent>
				if event == "MODIFIER_STATE_CHANGED" then
					if self == Skillet.mouseOver then
--						Skillet:SkillButton_OnEnter(Skillet.mouseOver)
					end
					if IsControlKeyDown() then
						SkilletFrame:EnableKeyboard(true)
					else
						SkilletFrame:EnableKeyboard(false)
					end
				end
			</OnEvent>
		</Scripts>
	</Button>
	<Button name="SkilletSkillButtonTemplate" hidden="true" virtual="true">
		<Size>
			<AbsDimension x="293" y="16" />
		</Size>
		<!--  3 pieces of text: required level, name, craftable counts
		-->
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentLevel" inherits="GameFontNormalSmall" justifyH="LEFT">
					<Size>
						<AbsDimension x="25" y="0" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
				<FontString name="$parentCounts" inherits="GameFontNormalSmall" justifyH="RIGHT">
					<Size>
						<AbsDimension x="100" y="0" />
					</Size>
					<Anchors>
						<Anchor point="RIGHT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
				<FontString name="$parentName" inherits="GameFontNormal" justifyH="LEFT">
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLevel" relativePoint="RIGHT" />
						<Anchor point="RIGHT" relativeTo="$parentCounts" relativePoint="LEFT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
			</Layer>
		</Layers>
		<!--
			Textures for the +/- buttons on headers
		-->
		<Frames>
			<Button name="$parentExpand" inherits="SkilletHeaderExpandButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<StatusBar name="$parentSubSkillRankBar" parentKey="SubSkillRankBar" drawLayer="BACKGROUND" minValue="0" maxValue="1" defaultValue="1">
				<Size x="58" y="14"/>
				<Anchors>
					<Anchor point="RIGHT" x="0" y="0"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<Texture parentKey="BorderLeft" file="Interface\PaperDollInfoFrame\UI-Character-Skills-BarBorder">
							<Size x="9" y="18"/>
							<TexCoords left="0.007843" right="0.043137" top="0.193548" bottom="0.774193"/>
							<Anchors>
								<Anchor point="LEFT" x="-2" y="0"/>
							</Anchors>
						</Texture>
						<Texture parentKey="BorderRight" file="Interface\PaperDollInfoFrame\UI-Character-Skills-BarBorder">
							<Size x="9" y="18"/>
							<TexCoords left="0.043137" right="0.007843" top="0.193548" bottom="0.774193"/>
							<Anchors>
								<Anchor point="RIGHT" x="2" y="0"/>
							</Anchors>
						</Texture>
						<Texture parentKey="BorderMid" file="Interface\PaperDollInfoFrame\UI-Character-Skills-BarBorder">
							<TexCoords left="0.113726" right="0.1490196" top="0.193548" bottom="0.774193"/>
							<Anchors>
								<Anchor point="TOPLEFT" relativeKey="$parent.BorderLeft" relativePoint="TOPRIGHT"/>
								<Anchor point="BOTTOMRIGHT" relativeKey="$parent.BorderRight" relativePoint="BOTTOMLEFT"/>
							</Anchors>
						</Texture>
						<FontString parentKey="Rank" inherits="GameFontHighlightSmall">
							<Anchors>
								<Anchor point="CENTER"/>
							</Anchors>
						</FontString>
					</Layer>
				</Layers>
				<BarTexture file="Interface\PaperDollInfoFrame\UI-Character-Skills-Bar"/>
				<BarColor r=".25" g=".25" b=".75"/>
			</StatusBar>
		</Frames>
		<Scripts>
			<OnMouseUp>
				Skillet:SkillButton_OnMouseUp(self)
			</OnMouseUp>
			<OnMouseDown>
				Skillet:SkillButton_OnMouseDown(self)
			</OnMouseDown>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
				self:RegisterForDrag("LeftButton")
				self:EnableKeyboard(false)
			</OnLoad>
			<OnClick>
				Skillet:InventoryFilterButtons_Hide()
				Skillet:SkillButton_OnClick(self,button)
			</OnClick>
			<OnDragStart>
				Skillet.mouseOver = self
				Skillet:SkillButton_OnDragStart(self, button)
			</OnDragStart>
			<OnReceiveDrag>
				Skillet.mouseOver = self
				Skillet:SkillButton_OnReceiveDrag(self, button)
			</OnReceiveDrag>
			<OnDragStop>
				Skillet:SkillButton_OnDragStop(self, button)
			</OnDragStop>
			<OnEnter>
				self:RegisterEvent("MODIFIER_STATE_CHANGED")
				Skillet.mouseOver = self
				Skillet:SkillButton_OnEnter(self)
			</OnEnter>
			<OnHide>
				if self == Skillet.mouseOver then
					SkilletFrame:EnableKeyboard(false)
					Skillet.mouseOver = nil
				end
			</OnHide>
			<OnLeave>
				self:UnregisterEvent("MODIFIER_STATE_CHANGED")
				local ct = _G[self:GetName().."Counts"]
				local r,g,b = ct:GetTextColor()
				_G[self:GetName().."Name"]:SetTextColor(r, g, b)
				SkilletTradeskillTooltip:Hide()
				Skillet.mouseOver = nil
				SkilletSkillTooltip:Hide()
				ShoppingTooltip1:Hide()
				ShoppingTooltip2:Hide()
			</OnLeave>
			<OnEvent>
				if event == "MODIFIER_STATE_CHANGED" then
					if self == Skillet.mouseOver then
						Skillet:SkillButton_OnEnter(Skillet.mouseOver)
					end
					if IsControlKeyDown() then
						SkilletFrame:EnableKeyboard(true)
					else
						SkilletFrame:EnableKeyboard(false)
					end
				end
			</OnEvent>
		</Scripts>
	</Button>
	<!--
		simplified skill button template for dragging
	-->
	<Frame name="SkilletSkillButtonDragTemplate" hidden="true" virtual="true">
		<Size>
			<AbsDimension x="293" y="1" />
		</Size>
		<!--  3 pieces of text: required level, name, craftable counts
		-->
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentLevel" inherits="GameFontNormalSmall" justifyH="LEFT">
					<Size>
						<AbsDimension x="25" y="0" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
				<FontString name="$parentCounts" inherits="GameFontNormalSmall" justifyH="RIGHT">
					<Size>
						<AbsDimension x="100" y="0" />
					</Size>
					<Anchors>
						<Anchor point="RIGHT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
				<FontString name="$parentName" inherits="GameFontNormal" justifyH="LEFT">
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLevel" relativePoint="RIGHT" />
						<Anchor point="RIGHT" relativeTo="$parentCounts" relativePoint="LEFT" />
					</Anchors>
					<Color r="1" g="1" b="1" a="1" />
				</FontString>
			</Layer>
		</Layers>
		<!--
			Textures for the +/- buttons on headers
		-->
		<Frames>
			<Button name="$parentExpand" inherits="SkilletHeaderExpandButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
	</Frame>
	<!--
	##		Editbox to change the name of a header
	-->
	<EditBox name="SkillButtonNameEdit" historyLines="0" autoFocus="true" hidden="true">
		<Size>
			<AbsDimension x="293" y="16" />
		</Size>
		<FontString inherits="GameFontNormal" justifyH="LEFT">
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="20" y="0" />
					</Offset>
				</Anchor>
			</Anchors>
			<Color r="1" g="1" b="1" a="1"/>
		</FontString>
		<Scripts>
			<OnTabPressed>
				Skillet:NameEditSave()
			</OnTabPressed>
			<OnEnterPressed>
				Skillet:NameEditSave()
			</OnEnterPressed>
			<OnEscapePressed>
				self:ClearFocus()
			</OnEscapePressed>
			<OnTextChanged>
			</OnTextChanged>
			<OnEditFocusLost>
				self:Hide()
				if (self.originalButton) then
					self.originalButton:Show()
					self.originalButton = nil
					Skillet:UpdateTradeSkillWindow()
				end
			</OnEditFocusLost>
			<OnEditFocusGained>
				self:HighlightText();
			</OnEditFocusGained>
		</Scripts>
	</EditBox>
	<!--
	##		Editbox to change the name of a group
	-->
	<EditBox name="GroupButtonNameEdit" historyLines="0" autoFocus="true" hidden="true">
		<Size>
			<AbsDimension x="293" y="16" />
		</Size>
		<FontString inherits="GameFontNormalSmall" justifyH="RIGHT">
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="20" y="0" />
					</Offset>
				</Anchor>
			</Anchors>
			<Color r="1" g="1" b="1" a="1"/>
		</FontString>
		<Scripts>
			<OnTabPressed>
				Skillet:GroupNameEditSave()
			</OnTabPressed>
			<OnEnterPressed>
				Skillet:GroupNameEditSave()
			</OnEnterPressed>
			<OnEscapePressed>
				self:ClearFocus()
			</OnEscapePressed>
			<OnTextChanged>
			</OnTextChanged>
			<OnEditFocusLost>
				self:Hide()
				SkilletRecipeGroupDropdownButton:Show()
				Skillet:UpdateTradeSkillWindow()
			</OnEditFocusLost>
			<OnEditFocusGained>
				self:HighlightText()
			</OnEditFocusGained>
		</Scripts>
	</EditBox>
	<!--
	#
	#  Template for all the buttons used in the list of queued items
	#
	-->
	<Frame name="SkilletQueueItemButtonTemplate_Count" hidden="false" virtual="true">
		<Size>
			<AbsDimension x="36" y="16"/>
		</Size>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentText" inherits="GameFontNormalSmall" justifyH="LEFT">
					<Size>
						<AbsDimension x="36" y="0"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
						</Anchor>
					</Anchors>
					<Color r="1" g="1" b="1" a="1"/>
				</FontString>
			</Layer>
		</Layers>
	</Frame>
	<Frame name="SkilletQueueItemButtonTemplate_Name" hidden="false" virtual="true">
		<Size>
			<AbsDimension x="274" y="16"/>
		</Size>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentText" inherits="GameFontNormalSmall" justifyH="LEFT">
					<Size>
						<AbsDimension x="280" y="0"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
						</Anchor>
					</Anchors>
					<Color r="1" g="1" b="0" a="1"/>
				</FontString>
			</Layer>
		</Layers>
	</Frame>
	<Frame name="SkilletQueueItemButtonTemplate" hidden="true" virtual="true">
		<Size>
			<AbsDimension x="290" y="16"/>
		</Size>
		<Frames>
			<Frame name="$parentCount" inherits="SkilletQueueItemButtonTemplate_Count">
				<Anchors>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Button name="$parentName" inherits="SkilletQueueItemButtonTemplate_Name">
				<Anchors>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="34" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
					</OnLoad>
					<OnEnter>
						_G[self:GetName().."Text"]:SetTextColor(1,1,1)
					</OnEnter>
					<OnLeave>
						_G[self:GetName().."Text"]:SetTextColor(1,1,0)
					</OnLeave>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:QueueItemButton_OnClick(self, button);
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentDeleteButton" inherits="UIPanelButtonTemplate" text="X">
				<Size>
					<AbsDimension x="16" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentName" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="8" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:RemoveQueuedCommand(self:GetID());
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
	<!--
	#
	# Template for all buttons used to display the reagents needed
	#
	-->
	<Frame name="SkilletItemTemplate" hidden="false" virtual="true">
		<Size>
			<AbsDimension x="190" y="20"/>
		</Size>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentText" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="MIDDLE">
					<Size>
						<AbsDimension x="150" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT">
							<Offset>
								<AbsDimension x="54" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="1" g="1" b="1" a="1"/>
				</FontString>
				<FontString name="$parentCount" inherits="GameFontNormalSmall" justifyH="RIGHT" justifyV="MIDDLE">
					<Size>
						<AbsDimension x="80" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="1" g="1" b="1" a="1"/>
				</FontString>
				<FontString name="$parentNeeded" inherits="GameFontNormalSmall" justifyH="RIGHT" justifyV="MIDDLE">
					<Size>
						<AbsDimension x="34" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT">
							<Offset>
								<AbsDimension x="18" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				<Color r="1" g="1" b="1" a="1"/>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<!-- A button for the icon -->
			<button name="$parentIcon">
				<Size>
					<AbsDimension x="16" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</button>
		</Frames>
		<Scripts>
			<OnLoad>
				<!-- want the icon to be under the main button so the enter and leave
					 events for the button are triggered over the icon -->
				_G[self:GetName() .. "Icon"]:SetFrameLevel(self:GetFrameLevel() - 1)
			</OnLoad>
			<OnEnter>
--				GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT")
--				Skillet:SetTradeSkillToolTip(SkilletFrame.selectedSkill, self:GetID())
				Skillet:ReagentButtonOnEnter(self, SkilletFrame.selectedSkill, self:GetID())
--				GameTooltip:Show()
--				CursorUpdate(self);
			</OnEnter>
			<OnLeave>
				Skillet:ReagentButtonOnLeave(self, SkilletFrame.selectedSkill, self:GetID())
				GameTooltip:Hide();
				ResetCursor();
			</OnLeave>
			<OnUpdate>
				CursorOnUpdate(self);
			</OnUpdate>
			<OnClick>
				Skillet:InventoryFilterButtons_Hide()
				local link = Skillet:GetTradeSkillReagentItemLink(Skillet.selectedSkill, self:GetID())
				if ( IsControlKeyDown() ) then
				<!-- This opens up the dressing room window and display the character
					 wearing the item (if that is possible) -->
					DressUpItemLink(link);
				elseif ( IsShiftKeyDown() ) then
				<!-- This put a link to the *item* that can be created with this trade skill
					 into the current chat edit box -->
					ChatEdit_InsertLink(link);
				else
				<!-- generic click action -->
					Skillet:ReagentButtonOnClick(self, Skillet.selectedSkill, self:GetID())
				end
			</OnClick>
		</Scripts>
	</Frame>
	<!--
	#
	# Template used when creating checkboxes
	#
	-->
	<CheckButton name="SkilletCheckButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="20" y="20"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentText" inherits="GameFontHighlightSmall">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT">
							<Offset>
								<AbsDimension x="0" y="1"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
		<PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
		<HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
		<CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
		<DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
	</CheckButton>
	<!--
	#
	# Tool tip to be used when hovering over recipe lines in the skill list
	#
	-->
	<GameTooltip name="SkilletTradeskillTooltip" frameStrata="TOOLTIP" hidden="true">
		<Backdrop bgFile="Interface\Tooltips\UI-Tooltip-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="16"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentTextLeft1" inherits="GameTooltipTextSmall" hidden="true">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="10" y="-10"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentTextRight1" inherits="GameTooltipTextSmall" hidden="true">
					<Anchors>
						<Anchor point="RIGHT" relativeTo="$parentTextLeft1" relativePoint="LEFT">
							<Offset>
								<AbsDimension x="40" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
	</GameTooltip>
	<!-- Don't change the name 'SkilletFrame' as other mods may depend on it -->
	<Frame name="SkilletFrame" toplevel="true" movable="true" resizable="true" parent="UIParent" enableMouse="true" hidden="true">
		<Size>
			<AbsDimension x="660" y="512"/>
		</Size>
		<Frames>
			<!--
			#
			# A button on the top right to close the window
			#
			-->
			<Button name="SkilletFrameCloseButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletFrame" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-3" y="-3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnHide>
						if Skillet.fullView then
							Skillet:InventoryFilterButtons_Hide()
							Skillet:SkilletFrameForceClose()
						end
					</OnHide>
				</Scripts>
			</Button>
			<!--
			#
			# A button that displays the options dialog
			#
			-->
			<Button name="SkilletShowOptionsButton">
				<Size>
					<AbsDimension x="16" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="SkilletFrameCloseButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="6"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:ShowOptions();
					</OnClick>
				</Scripts>
				<NormalTexture file="Interface\Buttons\UI-MicroButton-Help-Up"/>
				<PushedTexture file="Interface\Buttons\UI-MicroButton-Help-Down"/>
				<HighlightTexture file="Interface\Buttons\UI-MicroButton-Hilight" alphaMode="ADD"/>
			</Button>
			<!-- A button to link the current trade skill -->
			<Button name="SkilletTradeSkillLinkButton">
				<Size>
					<AbsDimension x="32" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="SkilletShowOptionsButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="-5" y="-6"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						local activeEditBox =  ChatEdit_GetActiveWindow();
						if activeEditBox then
							local link=GetTradeSkillListLink();
							if (not ChatEdit_InsertLink(link) ) then
								assert(activeEditBox:GetName(), "Failed to add tradeskill link")
							end
						else
							ToggleDropDownMenu(1, nil, TradeSkillLinkDropDown, "SkilletTradeSkillLinkButton", 25, 25);
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self,"ANCHOR_TOPLEFT");
						GameTooltip:SetText(LINK_TRADESKILL_TOOLTIP, nil, nil, nil, nil, true);
						GameTooltip:Show();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
				<NormalTexture file="Interface\TradeSkillFrame\UI-TradeSkill-LinkButton">
					<TexCoords left="0" right="1.0" top="0" bottom="0.5"/>
				</NormalTexture>
				<HighlightTexture file="Interface\TradeSkillFrame\UI-TradeSkill-LinkButton" alphaMode="ADD">
					<TexCoords left="0" right="1.0" top="0.5" bottom="1.0"/>
				</HighlightTexture>
			</Button>
			<!--
			#
			# A status bar to show how much skill you have in this trade
			#
			-->
			<StatusBar name="SkilletRankFrame" drawLayer="BACKGROUND" minValue="0" maxValue="1" defaultValue="0">
				<Size>
					<AbsDimension x="297" y="14"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-12" y="-62"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="$parentSkillRank" inherits="GameFontHighlightSmall" justifyH="CENTER">
							<Anchors>
								<Anchor point="TOP" relativeTo="SkilletRankFrame">
									<Offset>
										<AbsDimension x="0" y="-1"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
					</Layer>
					<Layer level="BACKGROUND">
						<Texture name="$parentBackground">
							<!-- <Color r="1.0" g="1.0" b="1.0" a="0.2"/> -->
						</Texture>
					</Layer>
				</Layers>
				<Frames>
					<Button name="$parentBorder">
						<Size>
							<AbsDimension x="306" y="27"/>
						</Size>
						<Anchors>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="-5" y="0"/>
								</Offset>
							</Anchor>
						</Anchors>
						<NormalTexture name="$parentNormal" file="Interface\PaperDollInfoFrame\UI-Character-Skills-BarBorder" />
					</Button>
				</Frames>
				<Scripts>
				</Scripts>
				<BarTexture name="$parentBar">
					<Color r="0.8" g="0.8" b="0.8" a="1.0"/>
				</BarTexture>
			</StatusBar>
			<!--
			#
			# The list of known recipes on the left hand side
			#
			-->
			<Frame name="SkilletSkillListParent" parent="SkilletFrame">
				<Size>
					<AbsDimension x="320" y="430"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletFrame" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="10" y="-100"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOM" relativeTo="SkilletFrame" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
				</Scripts>
			</Frame>
			<ScrollFrame name="SkilletSkillList" inherits="FauxScrollFrameTemplate" parent="SkilletSkillListParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletSkillListParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletSkillListParent" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-27" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnVerticalScroll>
						Skillet:InventoryFilterButtons_Hide()
						FauxScrollFrame_OnVerticalScroll(self, offset, SKILLET_TRADE_SKILL_HEIGHT, Skillet.SkillList_OnScroll)
						-- re-apply the text highlight and tooltip (if any) when the button changes under the mouse on scroll event
						if Skillet.mouseOver then
							Skillet:SkillButton_OnEnter(Skillet.mouseOver)
						end
					</OnVerticalScroll>
					<OnLoad>
						ScrollFrame_OnLoad(self)
						self:RegisterForDrag("LeftButton")
					</OnLoad>
				</Scripts>
			</ScrollFrame>
			<!--
			#
			# Locked Tooltip for quick reference
			#
			-->
			<GameTooltip name="SkilletSkillTooltip" frameStrata="TOOLTIP" hidden="true" parent="UIParent" inherits="GameTooltipTemplate">
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletSkillListParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="-10" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						self:SetBackdropBorderColor(TOOLTIP_DEFAULT_COLOR.r, TOOLTIP_DEFAULT_COLOR.g, TOOLTIP_DEFAULT_COLOR.b);
						self:SetBackdropColor(TOOLTIP_DEFAULT_BACKGROUND_COLOR.r, TOOLTIP_DEFAULT_BACKGROUND_COLOR.g, TOOLTIP_DEFAULT_BACKGROUND_COLOR.b);
					</OnLoad>
				</Scripts>
			</GameTooltip>
			<!--
			#
			# Drop down where users can select the toon/skill they wish to view
			#
			-->
			<Button name="SkilletPlayerSelect">
				<Size>
					<AbsDimension x="120" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletRankFrame" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="-10" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="OVERLAY">
						<FontString name="$parentText" inherits="GameFontNormalLarge" justifyH="RIGHT">
							<Size>
								<AbsDimension x="120" y="0"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT"/>
							</Anchors>
							<Color r=".8" g=".8" b=".8" a="1"/>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnter>
						_G[self:GetName().."Text"]:SetTextColor(1,1,1)
						Skillet:PlayerSelect_OnEnter(self)
					</OnEnter>
					<OnLeave>
						_G[self:GetName().."Text"]:SetTextColor(.8,.8,.8)
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Drop down where users can select the grouping method they want to use
			#
			-->
			<Frame name="SkilletRecipeGroupDropdown" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="SkilletSkillListParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="45" y="38"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="SkilletGroupLabel" inherits="GameFontNormal" text="Grouping">
							<Anchors>
								<Anchor point="RIGHT" relativeTo="$parent" relativePoint="LEFT">
									<Offset>
										<AbsDimension x="15" y="1"/>
									</Offset>
								</Anchor>
							</Anchors>
							<Color r="1" g="1" b="1" a="1"/>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnShow>
						Skillet:RecipeGroupDropdown_OnShow()
					</OnShow>
				</Scripts>
			</Frame>
			<Button name="SkilletRecipeGroupOperations">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletRecipeGroupDropdownButton" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="-2" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\UI-SpellbookIcon-NextPage-Up"/>
				<PushedTexture file="Interface\Buttons\UI-SpellbookIcon-NextPage-Down"/>
				<HighlightTexture file="Interface\Buttons\ButtonHilight-Round" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:RecipeGroupOperations_OnClick(self)
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Drop down where users can select the sorting method they want to use
			#
			-->
			<Frame name="SkilletSortDropdown" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletRecipeGroupDropdown" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="8"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="SkilletSortLabel" inherits="GameFontNormal" text="Sorting">
							<Anchors>
								<Anchor point="RIGHT" relativeTo="$parent" relativePoint="LEFT">
									<Offset>
										<AbsDimension x="15" y="2"/>
									</Offset>
								</Anchor>
							</Anchors>
							<Color r="1" g="1" b="1" a="1"/>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnLoad>
						Skillet:SortDropdown_OnLoad()
					</OnLoad>
					<OnShow>
						Skillet:SortDropdown_OnShow()
					</OnShow>
				</Scripts>
			</Frame>
			<!--
			#
			# Button to display an arrow for sorting in ascending mode
			#
			-->
			<Button name="SkilletSortAscButton" inherits="UIPanelScrollUpButtonTemplate" hidden="false">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletSortDropdownButton" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<!--
			#
			# Button to display an arrow for sorting in descending mode
			#
			-->
			<Button name="SkilletSortDescButton" inherits="UIPanelScrollDownButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletSortDropdownButton" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<!--
			#
			# An edit box where users can type in filter text
			#
			-->
			<EditBox name="SkilletFilterBox" letters="50" historyLines="0" autoFocus="false">
				<Size>
					<AbsDimension x="126" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletSortDropdown" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="22" y="6"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture name="$parentLeft" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="8" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="TOPLEFT">
									<Offset>
										<AbsDimension x="-5" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0" right="0.0625" top="0" bottom="0.625"/>
						</Texture>
						<Texture name="$parentRight" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="8" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0.9375" right="1.0" top="0" bottom="0.625"/>
						</Texture>
						<Texture name="$parentMiddle" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="10" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
								<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"/>
							</Anchors>
							<TexCoords left="0.0625" right="0.9375" top="0" bottom="0.625"/>
						</Texture>
					</Layer>
					<Layer level="ARTWORK">
						<FontString name="SkilletFilterLabel" inherits="GameFontNormal" text="Filter">
							<Anchors>
								<Anchor point="RIGHT" relativeTo="$parent" relativePoint="LEFT">
									<Offset>
										<AbsDimension x="-5" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<Color r="1" g="1" b="1" a="1"/>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnterPressed>
						self:ClearFocus();
					</OnEnterPressed>
					<OnEscapePressed>
						self:ClearFocus();
					</OnEscapePressed>
					<OnTextChanged>
						Skillet:UpdateFilter(self:GetText());
					</OnTextChanged>
					<OnEditFocusLost>
						self:HighlightText(0, 0);
					</OnEditFocusLost>
					<OnEditFocusGained>
						if IsAltKeyDown() then
							self:SetText("")
						else
							self:HighlightText();
						end
					</OnEditFocusGained>
				</Scripts>
				<FontString inherits="ChatFontNormal"/>
			</EditBox>
			<Button name="SkilletSearchFilterClear">
				<Size>
					<AbsDimension x="32" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletFilterBox" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="-8" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\CancelButton-Up"/>
				<PushedTexture file="Interface\Buttons\CancelButton-Down"/>
				<HighlightTexture file="Interface\Buttons\CancelButton-Highlight" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						SkilletFilterBox:SetText("")
						SkilletFilterBox:ClearFocus()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Check boxes for various recipe filtering options.
			#
			-->
			<CheckButton name="SkilletHideUncraftableRecipes" hidden="false">
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletSkillListParent" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-5" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<NormalTexture file="Interface\Addons\Skillet\Icons\bag.tga"/>
				<PushedTexture file="Interface\Addons\Skillet\Icons\bag.tga"/>
				<CheckedTexture alphaMode="ADD" file="Interface\Buttons\CheckButtonHilight"/>
				<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
				<DisabledCheckedTexture file="Interface\Addons\Skillet\Icons\bag.tga"/>
				<Scripts>
					<OnShow>
						local hideUncraftable = Skillet:GetTradeSkillOption("hideuncraftable")
						if hideUncraftable then
							self:SetChecked(true)
						else
							self:SetChecked(false)
						end
					</OnShow>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp","RightButtonUp")
					</OnLoad>
					<OnClick>
						if button=="LeftButton" then
							Skillet:InventoryFilterButtons_Hide()
							if self:GetChecked() then
								PlaySound("igMainMenuOptionCheckBoxOn");
							end
							local before = Skillet:GetTradeSkillOption("hideuncraftable")
							Skillet:SetTradeSkillOption("hideuncraftable", not before)
							Skillet:SortAndFilterRecipes()
							Skillet:UpdateTradeSkillWindow()
						else
							if SkilletInventoryFilterBag:IsVisible() then
								Skillet:InventoryFilterButtons_Hide()
							else
								Skillet:InventoryFilterButtons_Show()
							end
							if Skillet:GetTradeSkillOption("hideuncraftable") then
								self:SetChecked(true)
							else
								self:SetChecked(false)
							end
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT")
						GameTooltip:SetText(CRAFT_IS_MAKEABLE_TOOLTIP, nil, nil, nil, nil, true)
						GameTooltip:AddLine("Left-Click to toggle", .7, .7, .7)
						GameTooltip:AddLine("Right-Click for filtering options", .7, .7, .7)
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			<!--
				inventory filter selector
			-->
			<CheckButton name="SkilletInventoryFilterOwned" inherits="SkilletInvFilterButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletHideUncraftableRecipes" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-30" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture name="$parentIcon" file="Interface\Icons\INV_Drink_13"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+5)
						self.slot = "owned"
						_G[self:GetName().."Checked"]:SetGradient("vertical",1,.5,1, 1,.5,1)
					</OnLoad>
				</Scripts>
			</CheckButton>
			<CheckButton name="SkilletInventoryFilterBag" inherits="SkilletInvFilterButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletInventoryFilterOwned" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\backpack_icon.tga"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+5)
						self.slot = "bag"
						_G[self:GetName().."Checked"]:SetGradient("vertical",1,1,.5, 1,1,.5)
					</OnLoad>
				</Scripts>
			</CheckButton>
			<CheckButton name="SkilletInventoryFilterCraft" inherits="SkilletInvFilterButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletInventoryFilterBag" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\crafted.tga"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+5)
						self.slot = "crafted"
						_G[self:GetName().."Checked"]:SetGradient("vertical",.5,1,.5, .5,1,.5)
					</OnLoad>
				</Scripts>
			</CheckButton>
			<CheckButton name="SkilletInventoryFilterVendor" inherits="SkilletInvFilterButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletInventoryFilterCraft" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\vendor_icon.tga"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+5)
						self.slot = "vendor"
						_G[self:GetName().."Checked"]:SetGradient("vertical",.5,1,.5, .5,1,.5)
					</OnLoad>
				</Scripts>
			</CheckButton>
			<CheckButton name="SkilletInventoryFilterAlts" inherits="SkilletInvFilterButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletInventoryFilterVendor" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\alts_icon.tga"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+5)
						self.slot = "alts"
						_G[self:GetName().."Checked"]:SetGradient("vertical",1,.5,1, 1,.5,1)
					</OnLoad>
				</Scripts>
			</CheckButton>
			<Button name="SkilletRecipeDifficultyButton">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<NormalTexture name="SkilletRecipeDifficultyButtonTexture" file="Interface\Addons\Skillet\Icons\skill_colors.tga"/>
				<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletHideUncraftableRecipes" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-5" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnShow>
						Skillet:RecipeDifficultyButton_OnShow()
					</OnShow>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						PlaySound("igMainMenuOptionCheckBoxOn");
						SkilletRecipeDifficultySelector:Show()
						self:Hide()
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT")
						GameTooltip:SetText(Skillet.L["Select skill difficulty threshold"], nil, nil, nil, nil, true)
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Button>
			<Button name="SkilletRecipeDifficultySelector" hidden="true">
				<Size>
					<AbsDimension x="20" y="80"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="SkilletRecipeDifficultyButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Addons\Skillet\Icons\skill_colors.tga"/>
				<Scripts>
					<OnLoad>
						self:SetFrameLevel(self:GetFrameLevel()+2)
					</OnLoad>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						PlaySound("igMainMenuOptionCheckBoxOn");
						local bottom = self:GetBottom()
						local top = self:GetTop()
						local x,y = GetCursorPosition()
						local scale = SkilletFrame:GetEffectiveScale()
						local newLevel = math.floor(4*(y/scale-bottom)/(top-bottom+1)+1)
						Skillet:SetTradeSkillOption("filterLevel", newLevel)
						self:Hide()
						SkilletRecipeDifficultyButton:Show()
						Skillet:SortAndFilterRecipes()
						Skillet:UpdateTradeSkillWindow()
					</OnClick>
					<OnLeave>
						self:Hide()
						SkilletRecipeDifficultyButton:Show()
					</OnLeave>
				</Scripts>
			</Button>
			<Button name="SkilletCollapseAllButton">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\collapse_icon.tga"/>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletRecipeDifficultyButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-5" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:CollapseAll()
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT")
						GameTooltip:SetText(Skillet.L["Collapse all groups"], nil, nil, nil, nil, true)
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Button>
			<Button name="SkilletExpandAllButton">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<NormalTexture name="$parentIcon" file="Interface\Addons\Skillet\Icons\expand_icon.tga"/>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletCollapseAllButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-5" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:ExpandAll()
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT")
						GameTooltip:SetText(Skillet.L["Expand all groups"], nil, nil, nil, nil, true)
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Button>
			<!--
			#
			# A button that shows plugin buttons
			#
			-->
			<Button name="SkilletPluginButton" inherits="UIPanelButtonTemplate" text="Plugins" parent="SkilletFrame">
				<Size>
					<AbsDimension x="60" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletFrame" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:PluginButton_OnClick(self)
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A highlight frame for the currently selected recipe
			#
			-->
			<Frame name="SkilletHighlightFrame" hidden="true">
				<Size>
					<AbsDimension x="290" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<Texture name="SkilletHighlight" file="Interface\Buttons\UI-Listbox-Highlight2"/>
					</Layer>
				</Layers>
			</Frame>
			<!--
			#
			# And the list of 24 buttons that are in the scrollable area
			#
			-->
			<Button name="SkilletScrollButton1" inherits="SkilletSkillButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletSkillList" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<!-- The rest of the buttons are created dynamically -->
			<!--
			#
			# A frame to hold the reagent list and associated details
			#
			-->
			<Frame name="SkilletReagentParent" parent="SkilletFrame">
				<Size>
					<AbsDimension x="280" y="280"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletFrame" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-10" y="-100"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="OVERLAY">
						<FontString name="SkilletSkillName" inherits="GameFontNormal" text="Skill Name" justifyH="LEFT">
							<Size>
								<AbsDimension x="244" y="0"/>
							</Size>
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="TOPLEFT">
									<Offset>
										<AbsDimension x="47" y="-10"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString name="SkilletDescriptionText" inherits="GameFontHighlightSmall" wordwrap="true" justifyH="LEFT">
							<Size>
								<AbsDimension x="244" y="0"/>
							</Size>
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletSkillName" relativePoint="BOTTOMLEFT" >
									<Offset>
										<AbsDimension x="4" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<!-- If the skill requires a special tool, this is the "Requires: " label for it -->
						<FontString name="SkilletRequirementLabel" inherits="GameFontHighlightSmall" text="REQUIRES_LABEL">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletDescriptionText" relativePoint="BOTTOMLEFT">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<!-- If the skill requires a special tool, this is the place where that tools name is printed -->
						<FontString name="SkilletRequirementText" inherits="GameFontHighlightSmall" justifyV="TOP" justifyH="LEFT">
							<Size>
								<AbsDimension x="180" y="0"/>
							</Size>
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletRequirementLabel" relativePoint="TOPRIGHT" >
									<Offset>
										<AbsDimension x="4" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString name="SkilletSkillCooldown" inherits="GameFontRedSmall" wordwrap="true" justifyH="LEFT" justifyV="TOP">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletRequirementLabel" relativePoint="BOTTOMLEFT">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString name="SkilletReagentLabel" inherits="GameFontNormalSmall" justifyH="LEFT" text="SPELL_REAGENTS">
							<Anchors>
								<Anchor point="TOPLEFT" relative="SkilletReagentParent" relativePoint="TOPLEFT">
									<Offset>
										<AbsDimension x="10" y="-90"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<!-- If there is extra info about a recipe that a mod wants to print, this is where they would
							 put the text -->
						<FontString name="SkilletExtraDetailTextLeft" inherits="GameFontHighlightSmall" justifyV="TOP" justifyH="LEFT">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMLEFT" >
									<Offset>
										<AbsDimension x="5" y="30"/>
									</Offset>
								</Anchor>
								<Anchor point="BOTTOMRIGHT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMRIGHT" >
									<Offset>
										<AbsDimension x="-5" y="5"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString name="SkilletExtraDetailTextRight" inherits="GameFontHighlightSmall" justifyV="TOP" justifyH="RIGHT">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMLEFT" >
									<Offset>
										<AbsDimension x="5" y="30"/>
									</Offset>
								</Anchor>
								<Anchor point="BOTTOMRIGHT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMRIGHT" >
									<Offset>
										<AbsDimension x="-5" y="5"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
					</Layer> <!-- OVERLAY -->
				</Layers>
			</Frame>
			<Frame name="SkilletQueueManagementParent" parent="SkilletFrame" hidden="true">
				<Size>
					<AbsDimension x="280" y="260"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletFrame" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-10" y="-100"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Frames>
					<Frame name="SkilletQueueLoadDropdown" inherits="UIDropDownMenuTemplate">
						<Anchors>
							<Anchor point="TOPLEFT" relativeTo="SkilletQueueManagementParent" relativePoint="TOPLEFT">
								<Offset>
									<AbsDimension x="5" y="-20"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Frames>
							<Button name="SkilletQueueLoadButton" inherits="UIPanelButtonTemplate" text="Load">
								<Size>
									<AbsDimension x="60" y="20"/>
								</Size>
								<Anchors>
									<Anchor point="LEFT" relativeTo="$parent" relativePoint="RIGHT">
										<Offset>
											<AbsDimension x="110" y="2"/>
										</Offset>
									</Anchor>
								</Anchors>
								<Scripts>
									<OnClick>
										Skillet:LoadQueue(Skillet.selectedQueueName);
									</OnClick>
								</Scripts>
							</Button>
							<Button name="SkilletQueueDeleteButton" inherits="UIPanelButtonTemplate" text="Delete">
								<Size>
									<AbsDimension x="60" y="20"/>
								</Size>
								<Anchors>
									<Anchor point="LEFT" relativeTo="SkilletQueueLoadButton" relativePoint="RIGHT">
										<Offset>
											<AbsDimension x="0" y="0"/>
										</Offset>
									</Anchor>
								</Anchors>
								<Scripts>
									<OnClick>
										Skillet:DeleteQueue(Skillet.selectedQueueName);
									</OnClick>
								</Scripts>
							</Button>
						</Frames>
						<Scripts>
							<OnShow>
								Skillet:QueueLoadDropdown_OnShow()
							</OnShow>
						</Scripts>
					</Frame>
					<EditBox name="SkilletQueueSaveEditBox" letters="50" historyLines="0" autoFocus="false">
						<Size>
							<AbsDimension x="126" y="20"/>
						</Size>
						<Anchors>
							<Anchor point="TOPLEFT" relativeTo="SkilletQueueLoadDropdown" relativePoint="BOTTOMLEFT">
								<Offset>
									<AbsDimension x="22" y="-2"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Layers>
							<Layer level="BACKGROUND">
								<Texture name="$parentLeft" file="Interface\Common\Common-Input-Border">
									<Size>
										<AbsDimension x="8" y="20"/>
									</Size>
									<Anchors>
										<Anchor point="TOPLEFT">
											<Offset>
												<AbsDimension x="-5" y="0"/>
											</Offset>
										</Anchor>
									</Anchors>
									<TexCoords left="0" right="0.0625" top="0" bottom="0.625"/>
								</Texture>
								<Texture name="$parentRight" file="Interface\Common\Common-Input-Border">
									<Size>
										<AbsDimension x="8" y="20"/>
									</Size>
									<Anchors>
										<Anchor point="RIGHT">
											<Offset>
												<AbsDimension x="0" y="0"/>
											</Offset>
										</Anchor>
									</Anchors>
									<TexCoords left="0.9375" right="1.0" top="0" bottom="0.625"/>
								</Texture>
								<Texture name="$parentMiddle" file="Interface\Common\Common-Input-Border">
									<Size>
										<AbsDimension x="10" y="20"/>
									</Size>
									<Anchors>
										<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
										<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"/>
									</Anchors>
									<TexCoords left="0.0625" right="0.9375" top="0" bottom="0.625"/>
								</Texture>
							</Layer>
						</Layers>
						<Frames>
							<Button name="SkilletQueueSaveButton" inherits="UIPanelButtonTemplate" text="Save">
								<Size>
									<AbsDimension x="60" y="20"/>
								</Size>
								<Anchors>
									<Anchor point="LEFT" relativeTo="$parent" relativePoint="RIGHT">
										<Offset>
											<AbsDimension x="0" y="0"/>
										</Offset>
									</Anchor>
								</Anchors>
								<Scripts>
									<OnClick>
										SkilletQueueSaveEditBox:ClearFocus()
										Skillet:SaveQueue(SkilletQueueSaveEditBox:GetText());
									</OnClick>
								</Scripts>
							</Button>
						</Frames>
						<Scripts>
							<OnEnterPressed>
								self:ClearFocus();
								Skillet:SaveQueue(SkilletQueueSaveEditBox:GetText());
							</OnEnterPressed>
							<OnEscapePressed>
								self:ClearFocus();
							</OnEscapePressed>
							<OnEditFocusLost>
								self:HighlightText(0, 0);
							</OnEditFocusLost>
							<OnEditFocusGained>
								self:HighlightText();
							</OnEditFocusGained>
						</Scripts>
						<FontString inherits="ChatFontNormal"/>
					</EditBox>
				</Frames>
			</Frame>
			<Frame name="SkilletViewCraftersParent" parent="SkilletFrame" hidden="true">
				<Size>
					<AbsDimension x="280" y="260"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletFrame" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-10" y="-100"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Frames>
						<ScrollFrame name="SkilletViewCraftersScrollFrame" inherits="FauxScrollFrameTemplate">
							<Anchors>
								<Anchor point="TOPLEFT">
									<Offset x="0" y="-4"/>
								</Anchor>
								<Anchor point="BOTTOMRIGHT">
									<Offset x="-26" y="4"/>
								</Anchor>
							</Anchors>
							<Scripts>
								<OnVerticalScroll>
									FauxScrollFrame_OnVerticalScroll(self, offset, TRADE_SKILL_HEIGHT, Skillet.ViewCraftersUpdate);
								</OnVerticalScroll>
							</Scripts>
						</ScrollFrame>
						<Button name="SkilletGuildCrafter1" inherits="SkilletGuildCrafterButtonTemplate" id="1">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT" x="4" y="-4"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter2" inherits="SkilletGuildCrafterButtonTemplate" id="2">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter1" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter3" inherits="SkilletGuildCrafterButtonTemplate" id="3">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter2" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter4" inherits="SkilletGuildCrafterButtonTemplate" id="4">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter3" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter5" inherits="SkilletGuildCrafterButtonTemplate" id="5">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter4" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter6" inherits="SkilletGuildCrafterButtonTemplate" id="6">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter5" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter7" inherits="SkilletGuildCrafterButtonTemplate" id="7">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter6" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter8" inherits="SkilletGuildCrafterButtonTemplate" id="8">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter7" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter9" inherits="SkilletGuildCrafterButtonTemplate" id="9">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter8" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter10" inherits="SkilletGuildCrafterButtonTemplate" id="10">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter9" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter11" inherits="SkilletGuildCrafterButtonTemplate" id="11">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter10" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter12" inherits="SkilletGuildCrafterButtonTemplate" id="12">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter11" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter13" inherits="SkilletGuildCrafterButtonTemplate" id="13">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter12" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter14" inherits="SkilletGuildCrafterButtonTemplate" id="14">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter13" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
						<Button name="SkilletGuildCrafter15" inherits="SkilletGuildCrafterButtonTemplate" id="15">
							<Anchors>
								<Anchor point="TOPLEFT" relativeTo="SkilletGuildCrafter14" relativePoint="BOTTOMLEFT" x="0" y="0"/>
							</Anchors>
						</Button>
				</Frames>
				<Scripts>
					<OnLoad>
						self:SetBackdropBorderColor(TOOLTIP_DEFAULT_COLOR.r, TOOLTIP_DEFAULT_COLOR.g, TOOLTIP_DEFAULT_COLOR.b);
						self:SetBackdropColor(0.0, 0.0, 0.0, 0.9);
					</OnLoad>
				</Scripts>
			</Frame>
			<!--
			#
			# A button that pops up the notes for this recipe/list of reagents
			#
			-->
			<Button name="SkilletRecipeNotesButton" inherits="UIPanelButtonTemplate" parent="SkilletFrame">
				<Size>
					<AbsDimension x="60" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletReagentParent" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:ShowRecipeNotes();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="SkilletQueueManagementButton" inherits="UIPanelButtonTemplate" parent="SkilletFrame">
				<Size>
					<AbsDimension x="70" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="SkilletRecipeNotesButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:QueueManagementToggle()
					</OnClick>
				</Scripts>
			</Button>
			<Button name="SkilletIgnoredMatsButton" inherits="UIPanelButtonTemplate" parent="SkilletFrame">
				<Size>
					<AbsDimension x="100" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="SkilletQueueManagementButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:DisplayIgnoreList()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A button that takes you back to the previous recipe
			#
			-->
			<Button name="SkilletPreviousItemButton" parent="SkilletReagentParent">
				<Size>
					<AbsDimension x="28" y="28"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="SkilletReagentParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-4"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\UI-SpellbookIcon-PrevPage-Up"/>
				<PushedTexture file="Interface\Buttons\UI-SpellbookIcon-PrevPage-Down"/>
				<HighlightTexture file="Interface\Buttons\ButtonHilight-Round" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:GoToPreviousSkill()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Not really a button, but we need a place to show the icon for the currently
			# selected skill.
			#
			-->
			<Button name="SkilletSkillIcon" parent="SkilletReagentParent">
				<Size>
					<AbsDimension x="37" y="37"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="10" y="-10"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="SkilletSkillIconCount" inherits="NumberFontNormal" justifyH="RIGHT" hidden="false">
							<Anchors>
								<Anchor point="BOTTOMRIGHT">
									<Offset>
										<AbsDimension x="-5" y="2"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnLoad>
						self:RegisterEvent("MODIFIER_STATE_CHANGED");
					</OnLoad>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						local link = Skillet:GetTradeSkillItemLink(Skillet.selectedSkill);
						if ( IsControlKeyDown() ) then
							<!-- This opens up the dressing room window and display the character
								 wearing the item (if that is possible) -->
							DressUpItemLink(link);
						elseif ( IsShiftKeyDown() ) then
							<!-- This put a link to the *item* that can be created with this trade skill
								 into the current chat  box -->
							ChatEdit_InsertLink(link);
						end
					</OnClick>
					<OnEnter>
						if ( Skillet.selectedSkill ~= -1 ) then
							GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT");
							Skillet:SetTradeSkillToolTip(SkilletFrame.selectedSkill);
							GameTooltip:Show()
							CursorUpdate(self);
						end
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
						ResetCursor();
					</OnLeave>
					<OnUpdate>
						CursorOnUpdate(self);
					</OnUpdate>
					<OnEvent>
						if GameTooltip:IsVisible() and GameTooltip:IsOwned(self) then
							if ( Skillet.selectedSkill ~= -1 ) then
								GameTooltip:SetOwner(self, "ANCHOR_TOPLEFT");
								Skillet:SetTradeSkillToolTip(SkilletFrame.selectedSkill);
								GameTooltip:Show()
								CursorUpdate(self);
							end
						end
					</OnEvent>
				</Scripts>
			</Button>
			<!--
			#
			# And of course, buttons for the reagents ...
			#
			-->
			<Button name="SkilletReagent1" inherits="SkilletItemTemplate" id="1" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagentLabel" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent2" inherits="SkilletItemTemplate" id="2" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent1" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent3" inherits="SkilletItemTemplate" id="3" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent2" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent4" inherits="SkilletItemTemplate" id="4" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent3" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent5" inherits="SkilletItemTemplate" id="5" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent4" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent6" inherits="SkilletItemTemplate" id="6" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent5" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent7" inherits="SkilletItemTemplate" id="7" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent6" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="SkilletReagent8" inherits="SkilletItemTemplate" id="8" parent="SkilletReagentParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagent7" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<!--
			# Auctionator button
			-->
			<Button name="SkilletAuctionatorButton" inherits="UIPanelButtonTemplate" text="Auctionator" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="2" y="2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:AuctionatorSearch();
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Buttons to queue or create items
			#
			-->
			<Button name="SkilletQueueAllButton" inherits="UIPanelButtonTemplate" text="QUEUE_ALL" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:QueueAllItems();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="SkilletEnchantButton" inherits="UIPanelButtonTemplate" text="QUEUE_ALL" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:EnchantItem();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="SkilletCreateAllButton" inherits="UIPanelButtonTemplate" text="CREATE_ALL" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletQueueAllButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
					</OnLoad>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:CreateAllItems(button);
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A button to queue a specific number of items
			#
			-->
			<Button name="SkilletQueueButton" inherits="UIPanelButtonTemplate" text="QUEUE" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletReagentParent" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:QueueItems(SkilletItemCountInputBox:GetNumber())
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A button to create a specific number of items
			#
			-->
			<Button name="SkilletCreateButton" inherits="UIPanelButtonTemplate" text="Create" parent="SkilletFrame">
				<Size>
					<AbsDimension x="85" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletQueueButton" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
					</OnLoad>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:CreateItems(SkilletItemCountInputBox:GetNumber(),button)
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# The slider to select the number of items to be crafted
			#
			-->
			<Slider name="SkilletCreateCountSlider" orientation="HORIZONTAL" enableMouse="true" parent="SkilletFrame">
				<Size>
					<AbsDimension x="135" y="17"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="SkilletCreateAllButton" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="5" y="0"/>
						</Offset>
					</Anchor>
					<Anchor point="RIGHT" relativeTo="SkilletCreateButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="-5" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<HitRectInsets>
					<AbsInset left="0" right="0" top="-10" bottom="-10"/>
				</HitRectInsets>
				<Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
					<EdgeSize>
						<AbsValue val="8"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="8"/>
					</TileSize>
					<BackgroundInsets>
						<AbsInset left="3" right="3" top="6" bottom="6"/>
					</BackgroundInsets>
				</Backdrop>
				<ThumbTexture name="$parentThumb" file="Interface\Buttons\UI-SliderBar-Button-Horizontal">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
				</ThumbTexture>
				<Scripts>
					<OnValueChanged>
						Skillet:UpdateNumItemsSlider(value, true);
					</OnValueChanged>
				</Scripts>
			</Slider>
			<!--
			#
			# The text box where they can enter the number of items to craft.
			#
			-->
			<EditBox name="SkilletItemCountInputBox" letters="4" historyLines="0" numeric="true" autoFocus="false">
				<Size>
					<AbsDimension x="36" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="SkilletCreateCountSlider" relativePoint="TOP">
						<Offset>
							<AbsDimension x="0" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture name="$parentLeft" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="8" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="TOPLEFT">
									<Offset>
										<AbsDimension x="-5" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0" right="0.0625" top="0" bottom="0.625"/>
						</Texture>
						<Texture name="$parentRight" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="8" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0.9375" right="1.0" top="0" bottom="0.625"/>
						</Texture>
						<Texture name="$parentMiddle" file="Interface\Common\Common-Input-Border">
							<Size>
								<AbsDimension x="10" y="20"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
								<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"/>
							</Anchors>
							<TexCoords left="0.0625" right="0.9375" top="0" bottom="0.625"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnterPressed>
						self:ClearFocus();
					</OnEnterPressed>
					<OnEscapePressed>
						self:ClearFocus();
					</OnEscapePressed>
					<OnTextChanged>
						if ( self:GetText() == "0" ) then
							self:SetText("1");
						end
					</OnTextChanged>
					<OnEditFocusLost>
						self:HighlightText(0, 0);
					</OnEditFocusLost>
					<OnEditFocusGained>
						self:HighlightText();
					</OnEditFocusGained>
				</Scripts>
				<FontString inherits="ChatFontNormal"/>
			</EditBox>
			<!--
			#
			# A frame to hold the queue and buttons
			#
			-->
			<Frame name="SkilletQueueParentBase" parent="SkilletFrame">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletCreateAllButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-3"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletFrame" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-10" y="32"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<!--
			#
			# A frame to hold the queue of recipes in line to be crafted
			#
			-->
			<Frame name="SkilletQueueParent" parent="SkilletQueueParentBase">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletQueueParentBase" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletQueueParentBase" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<ScrollFrame name="SkilletQueueList" inherits="FauxScrollFrameTemplate" parent="SkilletQueueParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletQueueParent" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOMRIGHT" relativeTo="SkilletQueueParent" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-27" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnVerticalScroll>
						FauxScrollFrame_OnVerticalScroll(self, offset, SKILLET_TRADE_SKILL_HEIGHT, Skillet.QueueList_OnScroll);
					</OnVerticalScroll>
				</Scripts>
			</ScrollFrame>
			<Button name="SkilletQueueButton1" inherits="SkilletQueueItemButtonTemplate" parent="SkilletQueueParent">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletQueueList" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="1" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<!-- rest of the buttons are created dynaically -->
			<!--
			#
			# A button that starts or continues the queue
			#
			-->
			<Button name="SkilletStartQueueButton" inherits="UIPanelButtonTemplate" text="Start" parent="SkilletQueueParentBase">
				<Size>
					<AbsDimension x="80" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletQueueParent" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
					</OnLoad>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:StartQueue_OnClick(self,button)
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A button that clears the current queue
			#
			-->
			<Button name="SkilletEmptyQueueButton" inherits="UIPanelButtonTemplate" text="Clear" parent="SkilletQueueParentBase">
				<Size>
					<AbsDimension x="80" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletStartQueueButton" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="5" y=""/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:ClearQueue()
						Skillet:UpdateTradeSkillWindow()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# A button to switch queue only view
			#
			-->
			<Button name="SkilletQueueOnlyButton" inherits="UIPanelButtonTemplate" text="-" parent="SkilletQueueParentBase">
				<Size>
					<AbsDimension x="15" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="SkilletEmptyQueueButton" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="5" y=""/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:QueueOnlyViewToggle()
					</OnClick>
				</Scripts>
			</Button>
			<!--
			#
			# Button to display the shopping list window
			#
			-->
			<Button name="SkilletShoppingListButton" inherits="UIPanelButtonTemplate" text="Shopping List" parent="SkilletQueueParentBase">
				<Size>
					<AbsDimension x="100" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletQueueParent" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:InventoryFilterButtons_Hide()
						Skillet:DisplayShoppingList(false)
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnKeyDown>
				Skillet:SkillButton_OnKeyDown(self, key)
			</OnKeyDown>
			<OnShow>
				PlaySound("igBackPackOpen")
				Skillet:Tradeskill_OnShow()
				self:EnableKeyboard(false)
			</OnShow>
			<OnHide>
				PlaySound("igBackPackClose")
				self:EnableKeyboard(false)
			</OnHide>
			<OnUpdate>
				if Skillet.dragEngaged then
					Skillet:SkillButton_DragUpdate()
				end
			</OnUpdate>
		</Scripts>
	</Frame> <!-- main trade skill frame -->
	<Frame name="SkilletStandalonQueue" toplevel="true" movable="true" resizable="true" parent="UIParent" enableMouse="true" hidden="true">
		<Size>
			<AbsDimension x="385" y="240"/>
		</Size>
		<Frames>
			<!--
			#
			# A button on the top right to close the window
			#
			-->
			<Button name="SkilletStandalonQueueCloseButton" inherits="UIPanelCloseButton" parent="SkilletStandalonQueue">
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="SkilletStandalonQueue" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-2" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Skillet:StandaloneQueueClose()
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
</Ui>
